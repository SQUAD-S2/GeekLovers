// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum ProductState {
  NEW
  SEMI_NEW
  SECOND_HAND
}

enum Role {
  USER
  MODERATOR
}

model User {
  id                         Int       @id @default(autoincrement())
  cpf                        String    @unique @db.Char(11)
  name                       String
  email                      String    @unique
  birthDate                  String

  profilePicture             String?
  status                     Decimal?
  card                       String?
  address                    String?
  phone                      String?

  role                       Role      @default(USER)
  hash                       String
  salt                       String

  favorites                  Favorites?
  cart                       Cart?

  products                   Product[]
  purchases                  Purchase[]
  comments                   Comment[]
  answers                    Answer[]

  @@map("user")
}

model Product {
  id                         Int       @id @default(autoincrement())
  name                       String
  price                      Decimal
  photos                     String[]
  features                   String[]
  state                      ProductState

  description                String?
  quantity                   Int

  user                       User      @relation(fields: [userId], references: [id])
  userId                     Int        

  favorites                  Favorites[]
  carts                      ProductsOnCart[]
  purchases                  ProductsOnPurchase[]
  comments                   Comment[]

  @@map("product")
}

model Comment {
  text                       String
  date                       DateTime  @default(now())

  user                       User      @relation(fields: [userId], references: [id])
  userId                     Int       @map("id_user")

  product                    Product   @relation(fields: [productId], references: [id])
  productId                  Int       @map("id_product")

  answer                     Answer?

  @@id([userId, productId])
  @@map("comment")
}

model Answer {
  text                       String
  date                       DateTime  @default(now())

  user                       User      @relation(fields: [userId], references: [id])
  userId                     Int       @map("id_user")


  comment                    Comment   @relation(fields: [buyerId, productId], references: [userId, productId])
  buyerId                    Int       @map("id_autor")
  productId                  Int       @map("id_product")

  @@id([buyerId, productId])
  @@map("answer")
}

model Cart {
  total                      Decimal   @map("valor_total") @db.Money
  quantity                   Int       @map("qnt_products")

  user                       User      @relation(fields: [userId], references: [id])
  userId                     Int       @id @map("id_user")

  products                   ProductsOnCart[]

  @@map("cart")
}

model Favorites {
  user                       User      @relation(fields: [userId], references: [id])
  userId                     Int       @id @map("id_user")

  products                   Product[]

  @@map("favorites")
}

model Purchase {
  date                       DateTime  @default(now())
  user                       User      @relation(fields: [userId], references: [id])
  userId                     Int       @map("id_user")

  value                      Decimal   @map("valor_total") @db.Money
  products                   ProductsOnPurchase[]

  @@id([date, userId])
  @@map("purchase")
}

model ProductsOnCart {
  user                       Cart      @relation(fields: [userId], references: [userId])
  userId                     Int       @map("id_user")

  product                    Product   @relation(fields: [productId], references: [id])
  productId                  Int       @map("id_product")

  quantity                   Int

  @@id([userId, productId])
  @@map("products_on_cart")
  
}

model ProductsOnPurchase {
  product                    Product   @relation(fields: [productId], references: [id])
  productId                  Int       @map("id_product")

  purchase                   Purchase  @relation(fields: [purchaseData, purchaseId], references: [date, userId])
  purchaseData               DateTime  @map("date_purchase")
  purchaseId                 Int       @map("id_purchase")

  quantity                   Int

  @@id([productId, purchaseData, purchaseId])
  @@map("products_on_purchase")
}
